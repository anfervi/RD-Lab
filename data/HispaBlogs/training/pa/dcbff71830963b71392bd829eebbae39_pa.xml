<author id="dcbff71830963b71392bd829eebbae39" url="avbravo.blogspot.com" feed="http://avbravo.blogspot.com/feeds/posts/default" country="PA">
	<documents count="7">
		<document id="37efde36189cbacfc002e0eb3ee685d2" url="http://avbravo.blogspot.com/2013/03/desarrollo-de-aplicaciones-web_18.html">			<content><![CDATA[Desarrollo de Aplicaciones Web NetBeans(JSF,DataClassG, JSFGenerator) Parte 2Se mostrara como configurar el proyecto Web con NetBeansAhora seleccionamos Dependenciasclic derecho y seleccionar Agregar dependenciasescribimos mysql y seleccionamos mysql:mysql-connector-java y buscamos la versión a utilizarse agrega la dependenciaahora agregamos los temas de primefaces. primefaces all-themesDependenciasOtras dependencias para Exportar a pdf desde primefacesitext  2.1.7apache poi 3.8commons-fileupload Dependencias agregadasEditar el archivo pom.xmlAjustamos las dependencias de maven<dependency>           <groupId>org.primefaces</groupId>           <artifactId>primefaces</artifactId>           <version>3.4</version>       </dependency>por la versión 3.5<dependency>           <groupId>org.primefaces</groupId>           <artifactId>primefaces</artifactId>           <version>3.4</version>       </dependency>Dar clic en el nombre del proyecto, y seleccionar BuildSe descarga el jar primefaces-3.5.jarcommons-iocommons-fileuploadListado de dependencias]]></content>
		</document>
		<document id="cb3ac5d2b636503e931c7a1fdb9793c9" url="http://avbravo.blogspot.com/2013/03/desarrollo-de-aplicaciones-web_22.html">			<content><![CDATA[Desarrollo de Aplicaciones Web NetBeans(JSF,DataClassG, JSFGenerator) Parte 3Generar las clases con DataClassGDataClassG, gestionar todas las operaciones sobre la base de datos, generando las clases, y controladores necesarios para realizar C.R.U.D.Descargar el plugin DataClassG desdehttp://plugins.netbeans.org/plugin/39424/?show=truee instalarlo en NetBeans IDE, se mostrará el icono del pluginAgregar la base de datos a Servicios  de NetBeans.Creamos una base de datos llamada scrum en el motor MySQLDesde NetBeans, Services->Drivers->MySQL(Connector/J driver)dar Clic derecho y seleccionar Connecting using...Se muestra la conexión a la base de datosSeleccionar el proyecto y dar clic en el icono Seleccionar el proyecto y la conexiónindicar  el alcance de los Beans, Controller, Persistencia.Seleccionar si se usar  @Inject, y si se desea reemplazar la clase LoginBean.javaSe generar los paquetespaquetesanotacionesbeanscontrollerdatageneralesinterfacesmenupersistenciaservices]]></content>
		</document>
		<document id="84f9184fa2d41909963808eb3885858f" url="http://avbravo.blogspot.com/2013/05/crear-un-wizard-con-netbeans-platform.html">			<content><![CDATA[Crear un Wizard con NEtBeans Platform Explicare el procedimiento para crear wizard de manera sencilla con NetBeans Platform1.Crear un nuevo proyectoCategoria: NetBeans ModulesProjects: Module2. Indicar el nombre y seleccionar Standalone Module3.Code Name Base indicamos org.avbravo.asistente4.Se genera el esqueleto del proyecto5.Clic derecho en el proyecto seleccionar New-> Wizard6. En el dialogo Wizard Type seleccionar Custom   indicamos el numero de paneles7. Escribir el nombre8. Se crean los paneles y podemos arrastrar componentes desde la paleta9. Editamos la clase generadorWirzardAction.javaquitamos los comentarios e indicamos la posicion donde deseamos que se muestre10.Creamos en NBM   Clic derecho en el proyecto y seleccionar Create NBM11.Instalarlo en el IDETools->Plugins12. Se muestra el elemento13.Se muestra el wizard]]></content>
		</document>
		<document id="df7f409b938d2c2b214eba7a5619d189" url="http://avbravo.blogspot.com/2013/05/desarrollo-de-aplicaciones-web.html">			<content><![CDATA[Desarrollo de Aplicaciones Web NetBeans(JSF,DataClassG, JSFGenerator) Parte 4Ahora seleccionamos en el toolbar del IDEDar clic en el icono JSFGeneratorSeleccionar  el proyectoestablecemos el formato de las fechas y horas.Seleccionar la plantilla, y permite reemplazar el template.xhtml, index.xhtml, menu.xhtml., cuando se ejecuta el plugin nuevamente.seleccionamos las paginas a generar o reemplazarIndicar la cantidad de filas en el datatable, y los eventos a realizar Ajax.Seleccionar la version de primefaces, el tema , el tipo de menu, el tipo de mensajes growl o messages, el tiempo de duración , si deseamos generar el growl o message en el template o en cada pagina.Tambien definimos el tamaño de los dialogos y el ambiente del proyecto.Se generan las paginas .xhtmlejecutamos el proyectose muestra en el ide ingresamos username = test password= test si no hemos especificado una tabla de usuarios, si tenemos la tabla establecida, utilizamos los datos del usario correspondiente.al ingresar se habilita el menúdar clic en Registros, se muestra el datatableclic en el botón + para agregar un nuevo registrose muestra el dialogoregistramos los datosdar clic en el registro deseado y se habilita las opciones de edición o eliminación.]]></content>
		</document>
		<document id="52e54c9bf4ad24d8376f595079343312" url="http://avbravo.blogspot.com/2013/05/wizard-con-netbeans-platform-en-el-menu.html">			<content><![CDATA[Crear un nuevo proyecto:Categoría: NetBeans Modules Projects:ModuleIndicamos el nombreIndicar el Code Name BaseClic derecho en el proyecto y seleccionar New-->WizardWizard Type seleccionar New File y especificamos la cantidad de paginasAsignamos el nombre de la clase , la categoría, y seleccionamos una imagenEl IDE crea el esqueleto del proyectoArrastramos algunos componentes al panel JSFGenVisualPanel1 desde la paletaEn el otro panel JSFGenVisualPanel2en las propiedades del proyecto cambiamos el numero de versiónCreamos el NBM del proyecto y lo instalamos y seleccionamos el proyecto y  al seleccionar nuevo en la categoría Web que seleccionamos aparece nuestro wizard.Se muestra el dialogo el primer panelsi presionamos el botón Next se mostrara el siguiente panel]]></content>
		</document>
		<document id="cf72e3d06ecbcb35d6537e2d98780af4" url="http://avbravo.blogspot.com/2013/06/aplicar-filtros-registros-usando.html">			<content><![CDATA[Aplicar Filtros a Registros usando DataClassG y JSFGeneratorFiltrar los registros de departamentos en base a la organización del usuario que se logueo en el sistema.TablasCrear un ManagedBean llamado DatosSession y colocar el atributo por el cual deseamos filtrar los registros en base al usuario que se logea en la aplicaciónClase DatosSesion.java@Named(value = "datosSesion")@SessionScopedpublic class DatosSesion implements Serializable {Integer idorganizacion;   public DatosSesion() {   }   public Integer getIdorganizacion() {       return idorganizacion;   }   public void setIdorganizacion(Integer idorganizacion) {       this.idorganizacion = idorganizacion;   }    }Clase LoginBean.javaDefinimos el objeto DatosSesion y en el método verificarLogin() realizamos la asignaciónDatosSesion datosSesion; public LoginBean() {    ELContext elContext = FacesContext.getCurrentInstance().getELContext();    datosSesion = (DatosSesion) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(elContext, null, "datosSesion");   }public String verificarLogin(){datosSesion.setIdorganizacion(usuarios.getIdorganizacion());En el ManagedBeans DepartamentoServices.java Creamos un objeto de DatosSesion, colocamos el valor en la propiedad del managedbean departamento en el método insert(), en el método loadItems() comentamos el selectAll() y lo reemplazamos por un query con el filtro, y en el método  selectAll()  comentamos  if(departamentoController.selectAll()){  y lo reemplazamos por un query con el filtro.DatosSesion datosSesion;public DepartamentoServices(){    ELContext elContext = FacesContext.getCurrentInstance().getELContext();  departamentolist = new ArrayList<>();   datosSesion = (DatosSesion) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(elContext, null, "datosSesion");}@Overridepublic Boolean insert() {try{ departamento.setIdorganizacion(datosSesion.getIdorganizacion());public List<SelectItem> loadItems() {try {  //  selectAll();    query("idorganizacion='"+datosSesion.getIdorganizacion()+"'"); @Override   public Boolean selectAll() { // if(departamentoController.selectAll()){      if (departamentoController.query("idorganizacion='" + datosSesion.getIdorganizacion() + "'")) {            departamentolist = departamentoController.getDepartamentolist();        }En ManagedBeans  DepartamentosDataCreamos un objeto de DatosSesion, colocamos el valor en la propiedad del managedbean departamento en el método init(), insert(), en el método loadItems() comentamos el selectAll() y lo reemplazamos por un query con el filtro, y en el método  selectAll()  comentamos  if(departamentoController.selectAll()){  y lo reemplazamos por un query con el filtro.DatosSesion datosSesion;public DepartamentoServices(){    ELContext elContext = FacesContext.getCurrentInstance().getELContext();  departamentolist = new ArrayList<>();   datosSesion = (DatosSesion) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(elContext, null, "datosSesion");}   @PostConstruct   public void init() {//           ---udpate with your filter;      // selectAll();       query("idorganizacion='"+datosSesion.getIdorganizacion()+"'");   }@Overridepublic Boolean insert() {try{ departamento.setIdorganizacion(datosSesion.getIdorganizacion());public List<SelectItem> loadItems() {try {  //  selectAll();    query("idorganizacion='"+datosSesion.getIdorganizacion()+"'");  @Override   public Boolean selectAll() {       try {           if (departamentolist != null) {               departamentolist.removeAll(departamentolist);           }         //  if (departamentoController.selectAll()) {                       if (departamentoController.query("idorganizacion='"+datosSesion.getIdorganizacion()+"'")) {               departamentolist = departamentoController.getDepartamentolist();           }Select de todos los registrosLos componentes <p:dataTable se utilizan con la clase DepartamentosDataImagen de los departamentos pertenecientes a la Organizacion AImagen de los departamentos pertenecientes a la Organizacion AFormulario de insertar registros no se muestra el atributo idorganizacion ya que este se inserta directamente en base al usuario logueado.]]></content>
		</document>
		<document id="88e12457366f95e319cd8edbf1450e62" url="http://avbravo.blogspot.com/2013/09/agregar-primefaces-40rc1jar-al.html">			<content><![CDATA[Agregar primefaces 4.0.RC1.jar al repositorio maven localDescargar el jar desde http://www.primefaces.org/downloads.htmlTenemos el jar descargadoDesde terminal ejecutamosmvn install:install-file -DgroupId=org.primerfaces -DartifactId=primefaces-4.0.RC1 -Dversion=4.0.RC1 -Dpackaging=jar -DgeneratePom=true -Dfile=primefaces-4.0.RC1.jaral presionar enter se coloca el jar en el repositorio localEditar el archivo pom.xml y y colocar en la dependencia  <dependency>           <groupId>org.primefaces</groupId>           <artifactId>primefaces</artifactId>           <version>4.0.RC1</version>       </dependency>Dar clic derecho y seleccionar Build with DependenciesSe agrega la dependencia al proyecto]]></content>
		</document>
	</documents>
</author>